---

- step:
    name: tensorflow-check
    image: valohai/keras:2.1.3-tensorflow1.4.0-python3.5-cuda8.0-cudnn6-devel-ubuntu14.04
    command:
      - pwd
      - lsb_release -a
      - python --version
      - python -c "import keras; print(keras.__version__);"
      - python -c "import tensorflow; print(tensorflow.__version__);"
      - python -c "from tensorflow.python.client import device_lib; device_lib.list_local_devices();"
      - nvidia-smi
      - nvcc --version | grep release
      - cat /usr/include/x86_64-linux-gnu/cudnn_v*.h | grep CUDNN_MAJOR -A 2

- step:
    name: keras-dvc-cnn-simple
    image: valohai/keras:2.1.3-tensorflow1.4.0-python3.5-cuda8.0-cudnn6-devel-ubuntu14.04
    command:
      - tar -xf /valohai/inputs/dataset/*.tar -C /valohai/inputs/dataset/
      - python valohai/keras-dvc-cnn-simple.py {parameters}
    inputs:
      - name: dataset
    parameters:
      - name: epochs
        pass-as: --epochs={v}
        type: integer
        default: 20
      - name: inference
        pass-as: --inference={v}
        type: integer
        default: 0

- step:
    name: keras-20ng-cnn
    image: valohai/keras:2.1.3-tensorflow1.4.0-python3.5-cuda8.0-cudnn6-devel-ubuntu14.04
    command:
      - python valohai/keras-20ng-cnn.py {parameters}
    inputs:
      - name: dataset
    parameters:
      - name: epochs
        pass-as: --epochs={v}
        type: integer
        default: 20
      - name: inference
        pass-as: --inference={v}
        type: integer
        default: 0
